# Shell Options
shopt -s histappend     # append to the history file, don't overwrite it
shopt -s nocaseglob     # This option makes filename globbing case-insensitive.
shopt -s globstar       # Enables recursive globbing with **. This allows you to use ** to match directories and subdirectories.
shopt -s checkwinsize   # Ensures that the terminal's COLUMNS and LINES variables are checked and updated after every command.
shopt -s extglob        # Enables extended pattern matching features, which are more advanced than regular globbing. It allows for additional operators like +(pattern), *(pattern), and ?(pattern).
shopt -s expand_aliases # Allows the use of aliases within scripts. By default, aliases only work in interactive shells.

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1024
HISTFILESIZE=8192

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    if [[ "$UID" -eq 0 ]]; then
        PS1='${debian_chroot:+($debian_chroot)}\[\033[01;38;5;88m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    else
        PS1='${debian_chroot:+($debian_chroot)}\[\033[01;38;5;214m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    fi
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
        xterm*|rxvt*) PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1";;
        *);;
esac

if [[ -d "/usr/local/cargo/bin" ]]; then
    # Global path for cargo binaries
    export PATH="/usr/local/cargo/bin:$PATH"
fi

if [[ "$UID" -eq 0 ]]; then
    # For root, set global cargo home
    export CARGO_HOME="/usr/local/cargo"
else
    # For non-root users, check for local cargo setup
    if [ -d "$HOME/.cargo" ]; then
        . "$HOME/.cargo/env"
    fi
fi

# set PATH so it includes GOPATH/bin if it exists
if [ -x "$(command -v go)" ] && [ -d "$(go env GOPATH)/bin" ]; then
    PATH="$(go env GOPATH)/bin:$PATH"
fi

# enabling shell completions for pipx
if command -v pipx &> /dev/null; then
        eval "$(register-python-argcomplete pipx)"
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f "$HOME/.bash_aliases" ]; then
    . "$HOME/.bash_aliases"
fi
